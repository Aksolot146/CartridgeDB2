@page "/cartridges/add"
@using System.Net.Http
@using System.Net.Http.Json
@using System.Threading.Tasks
@using FrontendCartridges.Models
@using Microsoft.Extensions.Logging;
@inject HttpClient Http
@inject NavigationManager navigationManager
@inject ILogger<NewCartridge> Logger

<h3>New Cartridge</h3>

<EditForm EditContext="@editContext" OnValidSubmit="@AddAction">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <input id="Barcode" placeholder="Barcode" value="@addCartridge.Barcode" @onchange="@((ChangeEventArgs e) => ChangeBarcode(e?.Value?.ToString()))" />
    <br />

    <h6>Select Type</h6>
    @if (cartridgeTypes != null)
    {
        <InputSelect id="TypeId" @bind-Value="addCartridge.TypeId">
            @foreach (var cartridgeType in cartridgeTypes)
                {
                <option value="@cartridgeType.Id">@cartridgeType.FullName</option>
                }
        </InputSelect>
    }
    <br />

    <Button Type="submit" Name="Add" Width="100" />
    <Button Type="button" Name="Cancel" Width="100" OnClick="Back" HasActive="true"></Button>
</EditForm>

@code {
    private EditContext editContext;
    private IEnumerable<CartridgeType> cartridgeTypes;
    private Cartridge addCartridge = new Cartridge();

    protected override async Task OnInitializedAsync()
    {
        editContext = new(addCartridge);
        cartridgeTypes = await Http.GetFromJsonAsync<IEnumerable<CartridgeType>>("https://localhost:44371/api/cartridgetypes");
    }

    private async Task AddCartridge()
    {
        await Http.PostAsJsonAsync("https://localhost:44371/api/cartridges", addCartridge);
    }

    private void Back()
    {
        navigationManager.NavigateTo("https://localhost:44312/cartridges");
    }

    private async Task AddAction()
    {
        if (editContext != null && editContext.Validate())
        {
            await AddCartridge();
            Back();
        }
    }

    private async Task ChangeBarcode(string value)
    {
        addCartridge.Barcode = int.Parse(value);
        addCartridge.IsUniqueBarcode = await Http.GetFromJsonAsync<bool>($"https://localhost:44371/api/cartridges/checkUniquebarcode/{addCartridge.Barcode}");
    }
}
