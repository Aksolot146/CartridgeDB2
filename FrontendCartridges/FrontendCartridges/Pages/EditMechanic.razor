@page "/mechanics/edit/{id:int}"
@using System.Net.Http
@using System.Net.Http.Json
@using System.Threading.Tasks
@using FrontendCartridges.Models
@inject HttpClient Http
@inject NavigationManager navigationManager

@if (mechanic != null)
{
    <h3>Edit @(mechanic.LastName), @(mechanic.FirstName) @(mechanic.MiddleName) Mechanic</h3>

    <EditForm EditContext="@editContext" OnValidSubmit="@EditAction">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <InputText id="LastName" @bind-Value="mechanic.LastName" placeholder="Last name" />
        <br />
        <InputText id="FirstName" @bind-Value="mechanic.FirstName" placeholder="First name" />
        <br />
        <InputText id="MiddleName" @bind-Value="mechanic.MiddleName" placeholder="Middle name" />
        <br />

        <Button Type="submit" Name="Save" Width="100" />
        <Button Type="button" Name="Delete" Width="100" OnClick="Delete" HasActive="true"></Button>
        <Button Type="button" Name="Cancel" Width="100" OnClick="Back" HasActive="true"></Button>
    </EditForm>
}

@code {
    [Parameter]
    public int Id { get; set; }

    private EditContext editContext;
    private Mechanic mechanic;

    protected override async Task OnInitializedAsync()
    {
        mechanic = await Http.GetFromJsonAsync<Mechanic>($"https://localhost:44371/api/mechanics/{Id}");
        editContext = new(mechanic);
    }

    private async Task SaveMechanic()
    {
        await Http.PutAsJsonAsync($"https://localhost:44371/api/mechanics", mechanic);
    }

    private void Back()
    {
        navigationManager.NavigateTo("https://localhost:44312/mechanics");
    }

    private async Task EditAction()
    {
        if (editContext != null && editContext.Validate())
        {
            await SaveMechanic();
            Back();
        }
    }

    private void Delete()
    {
        navigationManager.NavigateTo($"https://localhost:44312/mechanics/delete/{Id}");
    }
}
